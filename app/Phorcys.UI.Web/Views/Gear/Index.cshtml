@using Microsoft.Web.Mvc
@using Phorcys.Core
@using Phorcys.UI.Web.Controllers
@using Phorcys.Web.Controllers
@using Telerik.Web.Mvc.UI
@model IEnumerable<Phorcys.Core.DiveLocation>
@{
  ViewBag.Title = "Gear";
  Layout = "~/Views/Shared/SiteMaster.cshtml";
}
<script type="text/javascript" language="javascript">
    function SubmitForm(id) {
        frmSite.SiteId.value = id;
        if (confirm("Are you sure?")) {
            frmSite.submit();
        }
    }
</script>

<h1>
    Gear</h1>
    
    
<div id="error" class="errorOnPage">
@{ if (ViewContext.TempData[ControllerEnums.GlobalViewDataProperty.PageMessage.ToString()] != null)
       {
       } <p id="pageMessage">
           @(ViewContext.TempData[ControllerEnums.GlobalViewDataProperty.PageMessage.ToString()])
       </p>
}
</div>

<p>
    @(Html.ActionLink<DiveLocationsController>(c => c.Create(), "Add a piece of gear"))
 </p> 
 
 <form action="/Phorcys/Gear/Delete/" name="frmSite" method="post">
  <input type="hidden" id="GearId" name="Id" />
</form>

<div id="grid">
  @{ Html.Telerik().Grid<Gear>()
  .Name("GearGrid")
  .Pageable(pager => pager.PageSize(20))
  .BindTo(Model)
  .Columns(columns =>
             {
               columns.Bound(o => o.Title).Title("Location").Sortable(true).Width(10).HtmlAttributes(new {@class = "grid"});
               columns.Bound(o => o.Notes).Sortable(false).Width(500);
               columns.Bound(o => o.User.LoginId).Sortable(true);
               columns.Template(o => Html.ActionLink<DiveSitesController>(c => c.IndexForLocation(o.Id), "Display")).Width(5).HtmlAttributes(new {@class = "grid"});
               columns.Template(o => Html.ActionLink<DiveLocationsController>(c => c.Edit(o.Id), "Edit")).Width(5).HtmlAttributes(new {@class = "grid"});
               columns.Template(o => Html.ActionLink<DiveSitesController>(c => c.CreateForLocation(o.Id), "Create Site at This Location")).Width(150).HtmlAttributes(new { @class = "grid" }).Width(300);
               columns.Template(o => (o.User.LoginId == "system" & User.Identity.Name != "system" ? Html.Encode("") : Html.Button("Delete", "Delete", HtmlButtonType.Submit, "SubmitForm(" + o.Id + ")").ToString())).HtmlAttributes(new { @Class = "grid" }).Width(25);
             })
  .Pageable()
  .Sortable()
  .Resizable(m => m.Columns(true))
  .Render();
  }
  </div>


