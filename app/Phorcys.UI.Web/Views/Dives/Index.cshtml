@using Microsoft.Web.Mvc
@using Phorcys.Core
@using Phorcys.UI.Web.Controllers
@using Phorcys.UI.Web.Models
@using Phorcys.Web.Controllers
@using Telerik.Web.Mvc.UI
@model IEnumerable<Dive>
    @{
        ViewBag.Title = "Dives";
        Layout = "~/Views/Shared/SiteMaster.cshtml";
    }
    <script type="text/javascript" language="javascript">
        function SubmitForm(id) {
            frmDive.DiveId.value = id;
            if (confirm("Are you sure?")) {
                frmDive.submit();
            }
        }
    </script>

    <h1>
        Dives
    </h1>


    <div id="error" class="errorOnPage">
        @{ if (ViewContext.TempData[ControllerEnums.GlobalViewDataProperty.PageMessage.ToString()] != null) {
         } <p id="pageMessage">
            @(ViewContext.TempData[ControllerEnums.GlobalViewDataProperty.PageMessage.ToString()])
        </p>
        }
    </div>

    <p>
        @(Html.ActionLink<DivesController>(c => c.Create(), "Enter New Dive"))
    </p>

    <form action="/Phorcys/Dives/Delete/" name="frmDive" method="post">
        <input type="hidden" id="DiveId" name="Id" />
        @Html.AntiForgeryToken()
    </form>

    <div id="grid">
        @{ Html.Telerik().Grid<Dive>()
  .Name("DiveGrid")
  .Pageable(pager => pager.PageSize(20))
  .BindTo(Model)
  .Columns(columns => {
      //columns.Bound(o => o.Title).Title("Dive").Sortable(true).Width(500).HtmlAttributes(new { @class = "grid" });
      
      columns.Bound(o => o.DiveNumber).Title("Dive #").Sortable(true);
      columns.Bound(o => o.DivePlan.Title).Title("Title");
      columns.Bound(o => o.DivePlan.DiveSite.Title).Title("Dive Site").Sortable(true);
      columns.Bound(o => o.DescentTime).Title("Descent Time").Sortable(true);
      columns.Bound(o => o.Minutes).Title("Minutes").Sortable(true);
      columns.Bound(o => o.MaxDepth).Title("Max Depth").Sortable(true);
      //columns.Bound(o => o.Notes).Sortable(false).Width(500);
      columns.Bound(o => o.User.LoginId).Title("User").Sortable(true);
      columns.Template(o => (o.User.LoginId == "system" & User.Identity.Name != "system" ? Html.Encode("") : Html.ActionLink<DivesController>(c => c.Edit(o.Id), "Edit").ToString())).HtmlAttributes(new { @class = "grid" });
      columns.Template(o => (o.User.LoginId == "system" & User.Identity.Name != "system" ? Html.Encode("") : Html.Button("Delete", "Delete", HtmlButtonType.Submit, "SubmitForm(" + o.Id + ")").ToString())).HtmlAttributes(new { @Class = "grid" });
   
  })
  .Pageable()
  .Sortable()
  .Filterable()
  .Resizable(m => m.Columns(true))
  .Render();
        }
    </div>

