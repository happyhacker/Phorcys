@using Microsoft.Web.Mvc
@using Phorcys.Core
@using Phorcys.UI.Web.Controllers
@using Phorcys.Web.Controllers
@using Telerik.Web.Mvc.UI
@model IEnumerable<Phorcys.UI.Web.Models.ContactsIndexModel>
@{
  ViewBag.Title = "Contacts";
  Layout = "~/Views/Shared/SiteMaster.cshtml";
}
<script type="text/javascript" language="javascript">
  function SubmitForm(id) {
    frmContact.ContactId.value = id;
    if (confirm("Are you sure?")) {
      frmContact.submit();
    }
  }
</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js" type="text/javascript"></script>
  <script src="Scripts/chosen.jquery.js" type="text/javascript"></script>
  <script type="text/javascript">
    var config = {
      '.chzn-select': {},
      '.chzn-select-deselect': { allow_single_deselect: true },
      '.chzn-select-no-single': { disable_search_threshold: 10 },
      '.chzn-select-no-results': { no_results_text: 'Oops, nothing found!' },
      '.chzn-select-width': { width: "95%" }
    }
    for (var selector in config) {
      $(selector).chosen(config[selector]);
    }
  </script>

<h1>
    Contacts</h1>
<div id="error" class="errorOnPage">
@{ if (ViewContext.TempData[ControllerEnums.GlobalViewDataProperty.PageMessage.ToString()] != null)
       {
       } <p id="pageMessage">
           @(ViewContext.TempData[ControllerEnums.GlobalViewDataProperty.PageMessage.ToString()])
       </p>
}
</div>

<p>
    @(Html.ActionLink<ContactsController>(c => c.Create(), "Create New Contact"))
 </p> 
 
 <form action="/Phorcys/Contacts/Delete/" name="frmContact" method="post">
  <input type="hidden" id="ContactId" name="Id" />
</form>

<div id="grid">
  @{ Html.Telerik().Grid<Phorcys.UI.Web.Models.ContactsIndexModel>()
  .Name("ContactGrid")
  .Pageable(pager => pager.PageSize(20))
  .BindTo(Model)
  .Columns(columns =>
             {
               columns.Bound(o => o.Company).Sortable(true).HtmlAttributes(new { @class = "grid" });
               columns.Bound(o => o.FirstName).Title("First Name").Sortable(true).Width(10).HtmlAttributes(new {@class = "grid"});
               columns.Bound(o => o.LastName).Title("Last Name").Sortable(true).Width(10).HtmlAttributes(new {@class = "grid"});
               columns.Template(o => o.EmailLink).Title("Email").HtmlAttributes(new { @class = "grid" });
               columns.Template(o => o.tags).Title("Tags").HtmlAttributes(new { @class = "grid" });
               columns.Bound(o => o.User).Sortable(true);
               columns.Template(o => (o.User == "system" & User.Identity.Name != "system" ? Html.Encode("") : Html.ActionLink<ContactsController>(c => c.Edit(o.ContactId), "Edit").ToString())).HtmlAttributes(new { @class = "grid" });
               columns.Template(o => (o.User == "system" & User.Identity.Name != "system" ? Html.Encode("") : Html.Button("Delete", "Delete", HtmlButtonType.Submit, "SubmitForm(" + o.ContactId + ")").ToString())).HtmlAttributes(new { @Class = "grid" }).Width(25);
             })
  .Pageable()
  .Sortable()
  .Filterable()
  .Resizable(m => m.Columns(true))
  .Render();
  }

</div>

